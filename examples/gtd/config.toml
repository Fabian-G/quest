# todo-file = "$HOME/path/to/your/todo.txt"
# done-file = "$HOME/path/to/your/done.txt"
backup = 10
unknown-tags = false
clear-on-done = []
styles = [
	{ if = 'blocked', fg = "3" },
]

[quest-score]
urgency-tag = "due"
urgency-begin = 45
min-priority = "E"

[recurrence]
rec-tag = "rec"
due-tag = "due"
threshold-tag = "t"

[tags]
[tags.order]
type = "int"
[tags.due]
type = "date"
humanize = true
styles = [
	{ if = 'date(tag(it, "due"), maxDate) <= today + 1d', fg = "1" },
	{ if = 'date(tag(it, "due"), maxDate) <= today + 3d', fg = "6" }
]
[tags.t]
type = "date"
humanize = true
styles = [
	{ if = 'date(tag(it, "t"), maxDate) <= today + 1d', fg = "1" },
	{ if = 'date(tag(it, "t"), maxDate) <= today + 3d', fg = "6" }
]
[tags.rec]
type = "duration"
[tags.delegated]
type = "string"
[tags.sm]
type = "string"
[tags.id]
type = "int"
[tags.after]
type = "int"

[default-view]
projection = ["line", "done" ,"priority","projects","contexts","description"]
clean = ["@ALL","+ALL"]
interactive = false
add-prefix = '+inbox'

[views.inbox]
query = '!done && +inbox'
sort = ["+creation","+description"]
clean = ["+inbox"]
projection = ["line","creation","description"]

[views.next]
query = 'actionable'
sort = ["-score"]
clean = ["+ALL","@ALL","due","t","order","rec","id","after"]
projection = ["line","score","priority","tag:due", "projects","contexts","description"]
add-prefix = ''

[views.someday]
query = '!done && somedayMaybe'
clean = ["+ALL","@ALL","due","t","order","rec"]
projection = ["line","priority","tag:sm","projects","contexts","description"]

[views.scheduled]
query = '!done && scheduled'
clean = ["+ALL","@ALL","due","t","order","rec"]
projection = ["line","priority","tag:due","tag:t","tag:rec","projects","contexts","description"]

[views.waiting]
query = '!done && waiting'
clean = ["+ALL","@ALL","due","t","order","rec"]
projection = ["line","priority","tag:delegated","projects","contexts","description"]

[[macro]]
name = "scheduled"
args = ["item"]
result = "bool"
query = 'date(tag(arg0, "t"), minDate) > today'
inject-it = true

[[macro]]
name = "waiting"
args = ["item"]
result = "bool"
query = '!(tag(arg0, "delegated", "") == "")'
inject-it = true

[[macro]]
name = "somedayMaybe"
args = ["item"]
result = "bool"
query = '!(tag(arg0, "sm", "") == "")'
inject-it = true

[[macro]]
name = "blocked"
args = ["item"]
result = "bool"
query = '!(tag(arg0, "after", "") == "") && (exists pre in items: tag(pre, "id", "") == tag(arg0, "after") && !done(pre))'
inject-it = true

[[macro]]
name = "haveCommonProject"
args = ["item", "item"]
result = "bool"
query = 'exists p in projects(arg0): exists p2 in projects(arg1): p == p2'
inject-it = true

[[macro]]
name = "ordered"
args = ["item"]
result = "bool"
query = '!(tag(arg0, "order", "") == "")'
inject-it = true

[[macro]]
name = "nextInSequence"
args = ["item"]
result = "bool"
query = '!ordered(arg0) || !done(arg0) && forall i in items: (!done(i) && ordered(i) && haveCommonProject(arg0, i)) -> (int(tag(arg0, "order")) <= int(tag(i, "order")))'
inject-it = true

[[macro]]
name = "actionable"
args = ["item"]
result = "bool"
query = '!done && !+inbox && !scheduled && !waiting && !somedayMaybe && nextInSequence && !blocked'
inject-it = true
